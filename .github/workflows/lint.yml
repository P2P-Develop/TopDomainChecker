# This is a basic workflow to help you get started with Actions

name: Lint

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
    push:
        branches: [develop]
    pull_request:
        branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    lint:
        name: "Lint code with ESLint and Remark"

        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Node.js environment
              uses: actions/setup-node@v2

            - name: Setup pnpm
              uses: pnpm/action-setup@v1
              with:
                  version: 5.16.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

            - name: Get pnpm cache directory
              id: npm-cache
              run: |
                  echo "::set-output name=dir::$(pnpm config get cache)"

            - name: Cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.npm-cache.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: pnpm i

            - name: ESLint review
              uses: reviewdog/action-eslint@v1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  reporter: github-pr-review
                  eslint_flags: "."

            - name: Remark Lint review
              uses: reviewdog/action-remark-lint@v1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  reporter: github-pr-check

            - name: Run lint
              run: npm run lint

            - name: Run jest
              run: npx jest --coverage

            - name: Show coverage in comments
              uses: ziishaned/jest-reporter-action@v0.0.1
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  test-command: "yarn jest --coverage"
